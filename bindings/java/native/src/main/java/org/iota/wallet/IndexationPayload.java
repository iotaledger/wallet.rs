// Automatically generated by flapigen
package org.iota.wallet;


public final class IndexationPayload {

    private IndexationPayload() {}

    public static IndexationPayload new_with(short [] index, short [] data) {
        long ret = do_new_with(index, data);
        IndexationPayload convRet = new IndexationPayload(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_new_with(short [] index, short [] data);

    public final short [] index() {
        short [] ret = do_index(mNativeObj);

        return ret;
    }
    private static native short [] do_index(long self);

    public final short [] data() {
        short [] ret = do_data(mNativeObj);

        return ret;
    }
    private static native short [] do_data(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ IndexationPayload(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}