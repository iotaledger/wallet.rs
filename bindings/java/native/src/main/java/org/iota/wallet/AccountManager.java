// Automatically generated by flapigen
package org.iota.wallet;


public final class AccountManager {

    public AccountManager(ManagerOptions options) {
        long a0 = options.mNativeObj;
        options.mNativeObj = 0;

        mNativeObj = init(a0);
        JNIReachabilityFence.reachabilityFence1(options);
    }
    private static native long init(long options);

    public final void stopBackgroundSync() {
        do_stopBackgroundSync(mNativeObj);
    }
    private static native void do_stopBackgroundSync(long self);

    public final void setStoragePassword(String password) {
        do_setStoragePassword(mNativeObj, password);
    }
    private static native void do_setStoragePassword(long self, String password);

    public final void setStrongholdPassword(String password) {
        do_setStrongholdPassword(mNativeObj, password);
    }
    private static native void do_setStrongholdPassword(long self, String password);

    public final void changeStrongholdPassword(String current_password, String new_password) {
        do_changeStrongholdPassword(mNativeObj, current_password, new_password);
    }
    private static native void do_changeStrongholdPassword(long self, String current_password, String new_password);

    public final String generateMnemonic() {
        String ret = do_generateMnemonic(mNativeObj);

        return ret;
    }
    private static native String do_generateMnemonic(long self);

    public final void storeMnemonic(AccountSignerType signer_type_enum, String mnemonic) {
        int a0 = signer_type_enum.getValue();
        do_storeMnemonic(mNativeObj, a0, mnemonic);

        JNIReachabilityFence.reachabilityFence1(signer_type_enum);
    }
    private static native void do_storeMnemonic(long self, int signer_type_enum, String mnemonic);

    public final void verify_mnemonic(String mnemonic) {
        do_verify_mnemonic(mNativeObj, mnemonic);
    }
    private static native void do_verify_mnemonic(long self, String mnemonic);

    public final AccountInitialiser create_account(ClientOptions client_options) {
        long a0 = client_options.mNativeObj;
        client_options.mNativeObj = 0;

        long ret = do_create_account(mNativeObj, a0);
        AccountInitialiser convRet = new AccountInitialiser(InternalPointerMarker.RAW_PTR, ret);

        JNIReachabilityFence.reachabilityFence1(client_options);

        return convRet;
    }
    private static native long do_create_account(long self, long client_options);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ AccountManager(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}