// Automatically generated by flapigen
package org.iota.wallet;


public final class Essence {

    private Essence() {}

    public final java.util.Optional<RegularEssence> get_as_regular() {
        long ret = do_get_as_regular(mNativeObj);
        java.util.Optional<RegularEssence> convRet;
        if (ret != 0) {
            convRet = java.util.Optional.of(new RegularEssence(InternalPointerMarker.RAW_PTR, ret));
        } else {
            convRet = java.util.Optional.empty();
        }

        return convRet;
    }
    private static native long do_get_as_regular(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ Essence(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}