// Automatically generated by flapigen
package org.iota.wallet;


public final class RegularEssence {

    private RegularEssence() {}

    public final TransactionInput [] inputs() {
        TransactionInput [] ret = do_inputs(mNativeObj);

        return ret;
    }
    private static native TransactionInput [] do_inputs(long self);

    public final TransactionOutput [] outputs() {
        TransactionOutput [] ret = do_outputs(mNativeObj);

        return ret;
    }
    private static native TransactionOutput [] do_outputs(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ RegularEssence(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}