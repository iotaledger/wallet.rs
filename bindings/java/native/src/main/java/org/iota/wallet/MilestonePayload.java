// Automatically generated by flapigen
package org.iota.wallet;


public final class MilestonePayload {

    private MilestonePayload() {}

    public final String id() {
        String ret = do_id(mNativeObj);

        return ret;
    }
    private static native String do_id(long self);

    public final MilestonePayloadEssence essence() {
        long ret = do_essence(mNativeObj);
        MilestonePayloadEssence convRet = new MilestonePayloadEssence(InternalPointerMarker.RAW_PTR, ret);

        return convRet;
    }
    private static native long do_essence(long self);

    public final boolean validate(java.lang.String [] applicable_public_keys, long min_threshold) {
        boolean ret = do_validate(mNativeObj, applicable_public_keys, min_threshold);

        return ret;
    }
    private static native boolean do_validate(long self, java.lang.String [] applicable_public_keys, long min_threshold);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ MilestonePayload(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}