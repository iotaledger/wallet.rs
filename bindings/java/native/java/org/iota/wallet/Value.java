// Automatically generated by flapigen
package org.iota.wallet;


public final class Value {
    public boolean equals(Object obj) {
        boolean equal = false;
        if (obj instanceof Value)
        equal = ((Value)obj).rustEq(this);
        return equal;
    }
    public int hashCode() {
        return (int)mNativeObj;
    }


    public Value(long value, ValueUnit unit) {
        int a1 = unit.getValue();
        mNativeObj = init(value, a1);
        JNIReachabilityFence.reachabilityFence1(unit);
    }
    private static native long init(long value, int unit);

    public final String with_denomination() {
        String ret = do_with_denomination(mNativeObj);

        return ret;
    }
    private static native String do_with_denomination(long self);

    public final long without_denomination() {
        long ret = do_without_denomination(mNativeObj);

        return ret;
    }
    private static native long do_without_denomination(long self);

    public final long value() {
        long ret = do_value(mNativeObj);

        return ret;
    }
    private static native long do_value(long self);

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ Value(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;
}