plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'c'
    id 'maven-publish'
    id 'signing'
    id 'com.google.osdetector' version '1.7.1'
}

group 'org.iota'
version '1.0.0-rc.1'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    // Dependencies that are used internally, and not exposed to consumers on their own compile classpath.
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    dependsOn jar
    doFirst {
        classpath += jar.outputs.files
    }
    useJUnitPlatform()
}

task buildRustRelease(type:Exec){
    workingDir 'native'
    commandLine 'cargo', 'build', '--release'
}

jar {
    dependsOn 'buildRustRelease'

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from('native/target/release') {
        include '*.so', '*.dylib', '*.dll'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    classifier = osdetector.classifier
}

publishing {
    publications {
        mavenJava   (MavenPublication) {

            groupId = 'org.iota'
            artifactId = 'iota-wallet-java'
            version = '1.0.0-rc.1'

            from components.java

            pom {
                name = 'iota-wallet-java'
                description = 'Java binding to the wallet.rs library.'
                url = 'https://github.com/iotaledger/wallet.rs'
                inceptionYear = '2022'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'samuel-rufi'
                        name = 'Samuel Rufinatscha'
                        email = 'samuel.rufinatscha@iota.org'
                    }
                }

                scm {
                    connection = 'scm:git:git:github.com/iotaledger/wallet.rs.git'
                    developerConnection = 'scm:git:ssh://github.com/iotaledger/wallet.rs.git'
                    url = 'https://github.com/iotaledger/wallet.rs'
                }

            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["ossrhUsername"]
                password = project.properties["ossrhPassword"]
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}