name: Test coverage

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - develop

jobs:
  collect-coverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
    - uses: actions/checkout@v2

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true

    - name: Get current date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Install required packages (Ubuntu)
      run: |
        sudo apt-get update
        sudo apt-get install libudev-dev libusb-1.0-0-dev

    - name: Cache cargo registry
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/registry
        # Add date to the cache to keep it up to date
        key: ubuntu-latest-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ubuntu-latest-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          ubuntu-latest-stable-cargo-registry-
    - name: Cache cargo index
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/git
        # Add date to the cache to keep it up to date
        key: ubuntu-latest-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ubuntu-latest-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          ubuntu-latest-stable-cargo-index-
    - name: Cache cargo target
      uses: actions/cache@v2.1.4
      with:
        path: target
        # Add date to the cache to keep it up to date
        key: ubuntu-latest-stable-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ubuntu-latest-stable-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          ubuntu-latest-stable-cargo-build-target-

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --no-fail-fast
      env:
        CARGO_INCREMENTAL: 0
        RUSTC_BOOTSTRAP: 1
        RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests"
        RUSTDOCFLAGS: "-Cpanic=abort"

    - name: Collect test coverage data
      uses: actions-rs/grcov@v0.1
      id: coverage
    
    - name: Upload coverage data to Coveralls
      uses: coverallsapp/github-action@v1.1.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{ steps.coverage.outputs.report }}
        flag-name: Unit
