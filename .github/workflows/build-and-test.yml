name: Build and run tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - dev
    paths-ignore:
      - 'specs/**'
      - 'docs/**'

jobs:
  crate:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install LLVM and Clang (Windows) # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
      uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
      if: matrix.os == 'windows-latest'
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
      
    - name: Set LIBCLANG_PATH (Windows)
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'

    - name: Get current date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'

    - name: Get current date
      if: matrix.os == 'windows-latest'
      run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Install required packages (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install libudev-dev libusb-1.0-0-dev

    - name: Cache cargo registry
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/registry
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          ${{ matrix.os }}-stable-cargo-registry-
    - name: Cache cargo index
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/git
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          ${{ matrix.os }}-stable-cargo-index-
    - name: Cache cargo target
      uses: actions/cache@v2.1.4
      with:
        path: target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          ${{ matrix.os }}-stable-cargo-build-target-

    - name: Run tests
      timeout-minutes: 40
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --release

  nodejs-bindings:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Install LLVM and Clang (Windows) # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
        if: matrix.os == 'windows-latest'
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm
        
      - name: Set LIBCLANG_PATH (Windows)
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
        if: matrix.os == 'windows-latest'

      - name: Set up Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'

      - name: Get current date
        if: matrix.os == 'windows-latest'
        run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install required packages (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Cache cargo registry
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/registry
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
            ${{ matrix.os }}-stable-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/git
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
            ${{ matrix.os }}-stable-cargo-index-
     
      - name: Cache nodejs binding cargo target
        uses: actions/cache@v2.1.4
        if: matrix.os != 'windows-latest'
        # We get a linker error on Windows when using the cache (LNK1181: cannot open input file 'node.lib')
        # https://github.com/iotaledger/wallet.rs/pull/467/checks?check_run_id=2214108362#step:11:41
        with:
          path: |
            bindings/nodejs/native/target
            bindings/nodejs/native/artifacts.json
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}-stable-cargo-build-node-target-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}-stable-cargo-build-node-target-${{ hashFiles('**/Cargo.lock') }}
            ${{ matrix.os }}-stable-cargo-build-node-target-

      - name: Build nodejs binding
        run: yarn
        working-directory: bindings/nodejs

  python-bindings:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true       

    - name: Install LLVM and Clang (Windows) # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
      uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
      if: matrix.os == 'windows-latest'
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
      
    - name: Set LIBCLANG_PATH (Windows)
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'

    - name: Get current date
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'

    - name: Get current date
      if: matrix.os == 'windows-latest'
      run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Install required packages (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install libudev-dev libusb-1.0-0-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Install dependencies for python binding test
      run: |
        python -m pip install --upgrade setuptools pip wheel
        python -m pip install tox-gh-actions
    
    - name: Cache cargo registry
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/registry
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          ${{ matrix.os }}-stable-cargo-registry-

    - name: Cache cargo index
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/git
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          ${{ matrix.os }}-stable-cargo-index-
    
    - name: Cache python binding cargo target
      uses: actions/cache@v2.1.4
      with:
        path: bindings/python/native/target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.os }}-stable-cargo-build-python-target-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.os }}-stable-cargo-build-python-target-${{ hashFiles('**/Cargo.lock') }}
          ${{ matrix.os }}-stable-cargo-build-python-target-

    - name: Build and test python binding
      run: tox
      working-directory: bindings/python/native

  java-bindings:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install LLVM and Clang # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
        uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
        if: matrix.os == 'windows-latest'
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm

      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
        if: matrix.os == 'windows-latest'

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
            java-version: 11.0.x
            architecture: x64

      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'

      - name: Get current date
        if: matrix.os == 'windows-latest'
        run: echo "CURRENT_DATE=$(Get-Date -Format "yyyy-MM-dd")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Install required packages (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev

      - name: Cache cargo registry
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/registry
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}-stable-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
            ${{ matrix.os }}-stable-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/git
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}-stable-cargo-index-${{ hashFiles('**/Cargo.lock') }}
            ${{ matrix.os }}-stable-cargo-index-
     
      - name: Cache java binding cargo target
        uses: actions/cache@v2.1.4
        with:
          path: bindings/java/native/target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}-stable-cargo-build-java-target-${{ hashFiles('**/Cargo.lock') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}-stable-cargo-build-java-target-${{ hashFiles('**/Cargo.lock') }}
            ${{ matrix.os }}-stable-cargo-build-java-target-

      - name: Build java binding
        run: cargo build --release
        working-directory: bindings/java/native
